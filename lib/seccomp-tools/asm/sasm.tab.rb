#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.16
# from Racc grammar file "".
#

require 'racc/parser.rb'

require 'seccomp-tools/asm/scalar'
require 'seccomp-tools/asm/scanner'
require 'seccomp-tools/asm/statement'

module SeccompTools
  module Asm
    class SeccompAsmParser < Racc::Parser

module_eval(<<'...end sasm.y/module_eval...', 'sasm.y', 120)
  def initialize(scanner)
    @scanner = scanner
    super()
  end

  # @return [Array<Statement>]
  def parse
    @tokens = @scanner.scan.dup
    return [] if @tokens.empty?

    @cur_idx = 0
    do_parse
  end

  def next_token
    token = @tokens[@cur_idx]
    return [false, '$'] if token.nil?

    @cur_idx += 1
    [token.sym, token.str]
  end

  def on_error(t, val, vstack)
    raise_error("unexpected string #{last_token.str.inspect}")
  end

  # @param [String] msg
  # @param [Integer] offset
  # @private
  def raise_error(msg, offset = 0)
    raise SeccompTools::ParseError, @scanner.format_error(last_token(offset), msg)
  end

  # @param [Integer] off
  #   0 for the last parsed token, -n for the n-th previous parsed token, n for the future n-th token.
  def last_token(off = 0)
    @tokens[@cur_idx - 1 + off]
  end

...end sasm.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    32,    32,    29,    29,    49,    58,    25,    35,   103,    35,
    35,    49,    49,    45,    40,    50,    42,    55,    56,   116,
    58,    19,    50,    51,    52,    53,    33,    33,    33,    40,
    51,    52,    53,     6,    12,    58,    40,    16,    58,    17,
    17,    25,    18,    58,    19,   -53,    35,    40,    42,    70,
    71,    94,    20,    49,    55,    55,    58,    58,    19,    50,
    73,    74,    75,    77,    78,    79,    20,    51,    52,    53,
   103,    20,    21,    40,     6,    12,   105,    42,    16,   107,
    17,    17,   103,    18,   105,    19,   105,     6,    12,   nil,
   nil,    16,   nil,    20,    17,    50,    18,    58,    19,   nil,
   nil,   nil,    20,    51,    52,    53,    20,    50,   nil,    40,
    50,   nil,   nil,   nil,   nil,    51,    52,    53,    51,    52,
    53,    40,    50,   nil,    40,   nil,   nil,   nil,   nil,    20,
    51,    52,    53,    50,    58,   nil,    40,   nil,   nil,   nil,
    50,    51,    52,    53,   nil,   nil,   nil,    40,    51,    52,
    53,    50,   nil,   nil,    40,   nil,   nil,   nil,   nil,    51,
    52,    53,    50,   nil,   nil,    40,   nil,   nil,   nil,    20,
    51,    52,    53,   nil,    58,   nil,    40 ]

racc_action_check = [
    12,    72,   111,    12,    18,   123,     2,    13,   123,    14,
    15,    36,    88,    18,    16,    18,    17,    19,    21,   110,
   111,    36,    36,    18,    18,    18,   111,    12,    72,    18,
    36,    36,    36,    26,    26,    88,    36,    26,   110,    87,
    26,    22,    26,    24,    26,    30,    31,    45,    62,    34,
    34,    71,    26,    37,    75,    76,    87,    26,    34,    34,
    34,    34,    34,    34,    34,    34,    34,    34,    34,    34,
    90,    37,     1,    34,     1,     1,    91,    93,     1,    95,
   119,     1,   101,     1,   108,     1,   109,     0,     0,   nil,
   nil,     0,   nil,     1,     0,    28,     0,   119,     0,   nil,
   nil,   nil,    28,    28,    28,    28,     0,    48,   nil,    28,
    54,   nil,   nil,   nil,   nil,    48,    48,    48,    54,    54,
    54,    48,    61,   nil,    54,   nil,   nil,   nil,   nil,    61,
    61,    61,    61,    89,    61,   nil,    61,   nil,   nil,   nil,
    97,    89,    89,    89,   nil,   nil,   nil,    89,    97,    97,
    97,    98,   nil,   nil,    97,   nil,   nil,   nil,   nil,    98,
    98,    98,   120,   nil,   nil,    98,   nil,   nil,   nil,   120,
   120,   120,   120,   nil,   120,   nil,   120 ]

racc_action_pointer = [
    85,    72,   -19,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    -5,   -20,   -18,   -17,   -14,     6,     1,   -13,
   nil,    18,    16,   nil,    17,   nil,    31,   nil,    81,   nil,
    18,    19,   nil,   nil,    45,   nil,     8,    50,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    19,   nil,   nil,    93,   nil,
   nil,   nil,   nil,   nil,    96,   nil,   nil,   nil,   nil,   nil,
   nil,   108,    38,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    48,    -4,   nil,   nil,    24,    25,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    30,     9,   119,
    41,    45,   nil,    67,   nil,    65,   nil,   126,   137,   nil,
   nil,    53,   nil,   nil,   nil,   nil,   nil,   nil,    53,    55,
    12,    -6,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    71,
   148,   nil,   nil,   -21,   nil ]

racc_action_default = [
   -74,   -74,   -67,   -67,    -4,    -5,    -7,    -8,    -9,   -10,
   -11,   -12,   -58,   -74,   -74,   -74,   -74,   -74,   -74,   -74,
   -59,   -74,   -67,    -1,   -64,   -65,   -74,   -67,   -74,   -30,
   -31,   -74,   -52,   -73,   -74,   -68,   -74,   -74,   -67,   -67,
   -69,   -32,   -33,   -34,   -35,   -36,   -38,   -54,   -74,   -58,
   -60,   -61,   -62,   -63,   -74,   -71,   125,    -2,   -66,    -3,
    -6,   -74,   -74,   -40,   -41,   -51,   -14,   -20,   -21,   -22,
   -23,   -74,   -42,   -44,   -45,   -74,   -74,   -48,   -49,   -50,
   -15,   -17,   -18,   -19,   -16,   -56,   -57,   -74,   -74,   -74,
   -74,   -74,   -13,   -74,   -24,   -74,   -53,   -74,   -74,   -67,
   -67,   -74,   -55,   -70,   -39,   -72,   -26,   -43,   -74,   -74,
   -28,   -74,   -37,   -46,   -47,   -25,   -67,   -67,   -31,   -74,
   -74,   -27,   -67,   -74,   -29 ]

racc_goto_table = [
    26,    28,    30,    41,    46,    31,    62,    44,    39,   102,
    54,    99,    67,    23,   104,    14,    14,    69,     1,    82,
   112,    59,    81,    60,    61,    83,    85,    34,    36,    37,
    27,   113,   114,    57,    90,    87,    88,    89,    66,    92,
    91,    14,   124,   121,    80,    65,     2,    22,    93,    84,
    68,    38,    86,   115,    43,    72,    76,   nil,   nil,   nil,
   nil,   nil,    96,   nil,   nil,    95,    97,    98,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   101,   nil,   100,   nil,   106,
   nil,   nil,   nil,   108,   109,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   110,   111,   122,   nil,
   117,   118,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   119,   120,   nil,   nil,   nil,   nil,   123 ]

racc_goto_check = [
     5,    26,    30,    27,    22,    35,    14,    15,    28,    29,
    32,    11,    14,     3,    33,    18,    18,    20,     1,    20,
    29,     6,    22,     7,     5,    15,    15,    16,    16,    16,
    13,    33,    33,     3,    22,     5,     5,    28,    17,    14,
    22,    18,    29,    11,    19,    16,     2,     2,    27,    21,
    23,    24,    18,    25,    31,    34,    36,   nil,   nil,   nil,
   nil,   nil,    30,   nil,   nil,    35,    32,    32,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    22,   nil,    15,   nil,    27,
   nil,   nil,   nil,    22,    22,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,     5,     5,    14,   nil,
    26,    30,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,     5,     5,   nil,   nil,   nil,   nil,     5 ]

racc_goto_pointer = [
   nil,    18,    46,    11,   nil,    -3,    -5,    -3,   nil,   nil,
   nil,   -76,   nil,    18,   -22,   -11,    14,     4,    15,     8,
   -17,    12,   -14,    16,    35,   -57,   -11,   -14,    -8,   -81,
   -10,    36,    -9,   -77,    21,    -7,    22,   nil ]

racc_goto_default = [
   nil,   nil,   nil,   nil,     3,    24,     4,     5,     7,     8,
     9,    10,    11,   nil,   nil,    13,   nil,   nil,    63,   nil,
    15,   nil,    64,   nil,   nil,   nil,   nil,   nil,    48,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    47 ]

racc_reduce_table = [
  0, 0, :racc_error,
  2, 34, :_reduce_1,
  3, 34, :_reduce_2,
  3, 35, :_reduce_3,
  1, 35, :_reduce_4,
  1, 37, :_reduce_5,
  3, 37, :_reduce_6,
  1, 40, :_reduce_7,
  1, 39, :_reduce_8,
  1, 39, :_reduce_9,
  1, 39, :_reduce_10,
  1, 39, :_reduce_11,
  1, 39, :_reduce_12,
  4, 41, :_reduce_13,
  3, 42, :_reduce_14,
  3, 42, :_reduce_15,
  3, 42, :_reduce_16,
  1, 52, :_reduce_none,
  1, 52, :_reduce_none,
  1, 52, :_reduce_none,
  1, 50, :_reduce_none,
  1, 50, :_reduce_21,
  1, 50, :_reduce_none,
  1, 50, :_reduce_23,
  2, 50, :_reduce_24,
  6, 43, :_reduce_25,
  5, 43, :_reduce_26,
  3, 58, :_reduce_27,
  0, 58, :_reduce_28,
  9, 57, :_reduce_29,
  1, 59, :_reduce_none,
  1, 59, :_reduce_none,
  2, 44, :_reduce_32,
  1, 60, :_reduce_33,
  2, 45, :_reduce_34,
  1, 64, :_reduce_none,
  1, 64, :_reduce_36,
  4, 64, :_reduce_37,
  1, 64, :_reduce_none,
  4, 53, :_reduce_39,
  1, 47, :_reduce_none,
  1, 47, :_reduce_none,
  1, 56, :_reduce_none,
  3, 56, :_reduce_43,
  1, 56, :_reduce_44,
  1, 56, :_reduce_45,
  4, 56, :_reduce_46,
  4, 67, :_reduce_47,
  1, 67, :_reduce_48,
  1, 69, :_reduce_none,
  1, 69, :_reduce_none,
  2, 46, :_reduce_51,
  1, 68, :_reduce_none,
  1, 68, :_reduce_none,
  1, 55, :_reduce_54,
  3, 55, :_reduce_55,
  1, 54, :_reduce_none,
  1, 54, :_reduce_none,
  1, 48, :_reduce_58,
  1, 51, :_reduce_59,
  1, 70, :_reduce_60,
  1, 70, :_reduce_61,
  1, 70, :_reduce_62,
  1, 70, :_reduce_63,
  1, 36, :_reduce_none,
  1, 36, :_reduce_none,
  2, 38, :_reduce_none,
  0, 38, :_reduce_none,
  1, 49, :_reduce_none,
  1, 61, :_reduce_none,
  1, 62, :_reduce_none,
  1, 65, :_reduce_none,
  1, 66, :_reduce_none,
  1, 63, :_reduce_none ]

racc_reduce_n = 74

racc_shift_n = 125

racc_token_table = {
  false => 0,
  :error => 1,
  :SYMBOL => 2,
  :A => 3,
  :LEN => 4,
  :ALU_OP => 5,
  :IF => 6,
  :ELSE => 7,
  :COMPARE => 8,
  :GOTO => 9,
  :GOTO_SYMBOL => 10,
  :RETURN => 11,
  :ACTION => 12,
  :MEM => 13,
  :INT => 14,
  :SYS_NUMBER => 15,
  :ARCH => 16,
  :DATA => 17,
  :INSTRUCTION_POINTER => 18,
  :ARGS => 19,
  :ARGS_H => 20,
  :X => 21,
  :HEX_INT => 22,
  :ARCH_VAL => 23,
  :SYSCALL => 24,
  :false => 25,
  :NEWLINE => 26,
  "=" => 27,
  "(" => 28,
  ")" => 29,
  "[" => 30,
  "]" => 31,
  "&" => 32 }

racc_nt_base = 33

racc_use_result_var = false

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "SYMBOL",
  "A",
  "LEN",
  "ALU_OP",
  "IF",
  "ELSE",
  "COMPARE",
  "GOTO",
  "GOTO_SYMBOL",
  "RETURN",
  "ACTION",
  "MEM",
  "INT",
  "SYS_NUMBER",
  "ARCH",
  "DATA",
  "INSTRUCTION_POINTER",
  "ARGS",
  "ARGS_H",
  "X",
  "HEX_INT",
  "ARCH_VAL",
  "SYSCALL",
  "false",
  "NEWLINE",
  "\"=\"",
  "\"(\"",
  "\")\"",
  "\"[\"",
  "\"]\"",
  "\"&\"",
  "$start",
  "prog",
  "normalized_statement",
  "terminator",
  "symbols",
  "newlines",
  "statement",
  "symbol",
  "arithmetic",
  "assignment",
  "conditional",
  "goto_expr",
  "return_stat",
  "alu_op_eq",
  "x_constexpr",
  "a",
  "ASSIGN",
  "a_rval",
  "x",
  "x_rval",
  "memory",
  "ax",
  "constexpr",
  "argument",
  "comparison",
  "else_block",
  "compare",
  "goto_symbol",
  "LPAREN",
  "RPAREN",
  "AND",
  "ret_val",
  "LBRACK",
  "RBRACK",
  "argument_long",
  "alu_op",
  "args",
  "number" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'sasm.y', 3)
  def _reduce_1(val, _values)
     [val[0]]
  end
.,.,

module_eval(<<'.,.,', 'sasm.y', 4)
  def _reduce_2(val, _values)
     val[0] << val[1]
  end
.,.,

module_eval(<<'.,.,', 'sasm.y', 5)
  def _reduce_3(val, _values)
     Statement.new(*val[2], val[0])
  end
.,.,

module_eval(<<'.,.,', 'sasm.y', 6)
  def _reduce_4(val, _values)
     Statement.new(*val[0], [])
  end
.,.,

module_eval(<<'.,.,', 'sasm.y', 7)
  def _reduce_5(val, _values)
     val
  end
.,.,

module_eval(<<'.,.,', 'sasm.y', 8)
  def _reduce_6(val, _values)
     val[0] << val[2]
  end
.,.,

module_eval(<<'.,.,', 'sasm.y', 10)
  def _reduce_7(val, _values)
                t = val[0]
            raise_error("'next' is a reserved label") if t == 'next'
            last_token

  end
.,.,

module_eval(<<'.,.,', 'sasm.y', 14)
  def _reduce_8(val, _values)
     [:alu, val[0]]
  end
.,.,

module_eval(<<'.,.,', 'sasm.y', 15)
  def _reduce_9(val, _values)
     [:assign, val[0]]
  end
.,.,

module_eval(<<'.,.,', 'sasm.y', 16)
  def _reduce_10(val, _values)
     [:if, val[0]]
  end
.,.,

module_eval(<<'.,.,', 'sasm.y', 17)
  def _reduce_11(val, _values)
     [:if, [nil, val[0], val[0]]]
  end
.,.,

module_eval(<<'.,.,', 'sasm.y', 18)
  def _reduce_12(val, _values)
     [:ret, val[0]]
  end
.,.,

module_eval(<<'.,.,', 'sasm.y', 19)
  def _reduce_13(val, _values)
     [val[1], val[3]]
  end
.,.,

module_eval(<<'.,.,', 'sasm.y', 20)
  def _reduce_14(val, _values)
     [val[0], val[2]]
  end
.,.,

module_eval(<<'.,.,', 'sasm.y', 21)
  def _reduce_15(val, _values)
     [val[0], val[2]]
  end
.,.,

module_eval(<<'.,.,', 'sasm.y', 22)
  def _reduce_16(val, _values)
     [val[0], val[2]]
  end
.,.,

# reduce 17 omitted

# reduce 18 omitted

# reduce 19 omitted

# reduce 20 omitted

module_eval(<<'.,.,', 'sasm.y', 29)
  def _reduce_21(val, _values)
     Scalar::Data.new(val[0])
  end
.,.,

# reduce 22 omitted

module_eval(<<'.,.,', 'sasm.y', 31)
  def _reduce_23(val, _values)
     Scalar::Len.instance
  end
.,.,

module_eval(<<'.,.,', 'sasm.y', 34)
  def _reduce_24(val, _values)
              raise_error('do you mean A = -A?', -1) if val[0] != '-'
          :neg

  end
.,.,

module_eval(<<'.,.,', 'sasm.y', 37)
  def _reduce_25(val, _values)
     [val[1], val[3], val[5]]
  end
.,.,

module_eval(<<'.,.,', 'sasm.y', 38)
  def _reduce_26(val, _values)
     [[val[1], val[2]], val[3], val[4]]
  end
.,.,

module_eval(<<'.,.,', 'sasm.y', 39)
  def _reduce_27(val, _values)
     val[2]
  end
.,.,

module_eval(<<'.,.,', 'sasm.y', 40)
  def _reduce_28(val, _values)
     :next
  end
.,.,

module_eval(<<'.,.,', 'sasm.y', 41)
  def _reduce_29(val, _values)
     [val[4], val[6]]
  end
.,.,

# reduce 30 omitted

# reduce 31 omitted

module_eval(<<'.,.,', 'sasm.y', 44)
  def _reduce_32(val, _values)
     val[1]
  end
.,.,

module_eval(<<'.,.,', 'sasm.y', 45)
  def _reduce_33(val, _values)
     last_token
  end
.,.,

module_eval(<<'.,.,', 'sasm.y', 46)
  def _reduce_34(val, _values)
     val[1]
  end
.,.,

# reduce 35 omitted

module_eval(<<'.,.,', 'sasm.y', 48)
  def _reduce_36(val, _values)
     Scalar::ConstVal.new(Const::BPF::ACTION[val[0].to_sym])
  end
.,.,

module_eval(<<'.,.,', 'sasm.y', 50)
  def _reduce_37(val, _values)
                 Scalar::ConstVal.new(Const::BPF::ACTION[val[0].to_sym] |
               (val[2].to_i & Const::BPF::SECCOMP_RET_DATA))

  end
.,.,

# reduce 38 omitted

module_eval(<<'.,.,', 'sasm.y', 55)
  def _reduce_39(val, _values)
                idx = val[2].to_i
            raise_error(format("Index of mem[] must between 0 and 15, got %d", idx), -1) unless idx.between?(0, 15)
            Scalar::Mem.new(idx)

  end
.,.,

# reduce 40 omitted

# reduce 41 omitted

# reduce 42 omitted

module_eval(<<'.,.,', 'sasm.y', 63)
  def _reduce_43(val, _values)
                  if val[1] != '>>' || val[2].to_i != 32
                off = val[1] == '>>' ? 0 : -1
                raise_error("operator after an argument can only be '>> 32'", off)
              end
              val[0] + 4

  end
.,.,

module_eval(<<'.,.,', 'sasm.y', 69)
  def _reduce_44(val, _values)
     0
  end
.,.,

module_eval(<<'.,.,', 'sasm.y', 70)
  def _reduce_45(val, _values)
     4
  end
.,.,

module_eval(<<'.,.,', 'sasm.y', 72)
  def _reduce_46(val, _values)
                  idx = val[2].to_i
              if idx % 4 != 0 || idx >= 64
                raise_error(format('Index of data[] must be a multiple of 4 and less than 64, got %d', idx), -1)
              end
              idx

  end
.,.,

module_eval(<<'.,.,', 'sasm.y', 80)
  def _reduce_47(val, _values)
                       idx = val[2].to_i
                   s = val[0]
                   raise_error(format('Index of %s[] must between 0 and 5, got %d', s, idx), -1) unless idx.between?(0, 5)
                   16 + idx * 8 + (s.downcase.end_with?('h') ? 4 : 0)

  end
.,.,

module_eval(<<'.,.,', 'sasm.y', 85)
  def _reduce_48(val, _values)
     8
  end
.,.,

# reduce 49 omitted

# reduce 50 omitted

module_eval(<<'.,.,', 'sasm.y', 88)
  def _reduce_51(val, _values)
     val[0] + val[1]
  end
.,.,

# reduce 52 omitted

# reduce 53 omitted

module_eval(<<'.,.,', 'sasm.y', 91)
  def _reduce_54(val, _values)
     Scalar::ConstVal.new(val[0] & 0xffffffff)
  end
.,.,

module_eval(<<'.,.,', 'sasm.y', 92)
  def _reduce_55(val, _values)
     val[1]
  end
.,.,

# reduce 56 omitted

# reduce 57 omitted

module_eval(<<'.,.,', 'sasm.y', 95)
  def _reduce_58(val, _values)
     Scalar::A.instance
  end
.,.,

module_eval(<<'.,.,', 'sasm.y', 96)
  def _reduce_59(val, _values)
     Scalar::X.instance
  end
.,.,

module_eval(<<'.,.,', 'sasm.y', 97)
  def _reduce_60(val, _values)
     val[0].to_i
  end
.,.,

module_eval(<<'.,.,', 'sasm.y', 98)
  def _reduce_61(val, _values)
     val[0].to_i(16)
  end
.,.,

module_eval(<<'.,.,', 'sasm.y', 99)
  def _reduce_62(val, _values)
     Const::Audit::ARCH[val[0]]
  end
.,.,

module_eval(<<'.,.,', 'sasm.y', 100)
  def _reduce_63(val, _values)
     @scanner.syscalls[val[0].to_sym]
  end
.,.,

# reduce 64 omitted

# reduce 65 omitted

# reduce 66 omitted

# reduce 67 omitted

# reduce 68 omitted

# reduce 69 omitted

# reduce 70 omitted

# reduce 71 omitted

# reduce 72 omitted

# reduce 73 omitted

def _reduce_none(val, _values)
  val[0]
end

    end   # class SeccompAsmParser
  end   # module Asm
end   # module SeccompTools


