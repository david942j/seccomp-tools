#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.16
# from Racc grammar file "".
#

require 'racc/parser.rb'

require 'seccomp-tools/asm/scalar'
require 'seccomp-tools/asm/scanner'
require 'seccomp-tools/asm/statement'

module SeccompTools
  module Asm
    class SeccompAsmParser < Racc::Parser

module_eval(<<'...end sasm.y/module_eval...', 'sasm.y', 102)
  def initialize(scanner)
    @scanner = scanner
    super()
  end

  # @return [Array<Statement>]
  def parse
    @tokens = @scanner.scan.dup
    @cur_idx = 0
    do_parse
  end

  def next_token
    token = @tokens[@cur_idx]
    return [false, '$'] if token.nil?

    @cur_idx += 1
    [token.sym, token.str]
  end

  def on_error(t, val, vstack)
    raise_error("unexpect string #{last_token.str.inspect}")
  end

  # @param [String] msg
  # @param [Integer] offset
  # @private
  def raise_error(msg, offset = 0)
    raise SeccompTools::ParseError, @scanner.format_error(last_token(offset), msg)
  end

  # @param [Integer] off
  #   0 for the last parsed token, -n for the n-th previous parsed token, n for the future n-th token.
  def last_token(off = 0)
    @tokens[@cur_idx - 1 + off]
  end

...end sasm.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    29,    29,    46,    46,    25,   101,    55,    46,    33,    89,
    42,    33,    47,    99,    33,    38,    39,    17,    48,    49,
    50,    55,    20,    55,    38,    31,    31,    31,     6,    12,
    55,    16,    55,    17,    17,    52,    18,    53,    19,    25,
    55,    33,    64,    46,    20,    38,    82,    52,    55,    55,
    19,    47,    68,    69,    70,    71,    20,    48,    49,    50,
    89,    91,    21,    38,     6,    12,    92,    16,    89,    91,
    17,   nil,    18,   nil,    19,     6,    12,   nil,    16,   nil,
    20,    17,    47,    18,   nil,    19,   nil,   nil,    48,    49,
    50,    20,    47,   nil,    38,   nil,   nil,   nil,    48,    49,
    50,    47,   nil,   nil,    38,   nil,    20,    48,    49,    50,
    47,    55,   nil,    38,   nil,   nil,    48,    49,    50,    47,
   nil,   nil,    38,   nil,   nil,    48,    49,    50,    47,   nil,
   nil,    38,   nil,    20,    48,    49,    50,   nil,    55,   nil,
    38 ]

racc_action_check = [
    12,    67,    18,    77,     2,    95,   107,    35,    13,   107,
    18,    14,    18,    94,    15,    16,    17,    76,    18,    18,
    18,    95,    35,    77,    18,    12,    67,    95,    26,    26,
    94,    26,    76,   103,    26,    19,    26,    21,    26,    22,
    24,    28,    32,    34,    26,    42,    64,    70,   103,    26,
    32,    32,    32,    32,    32,    32,    32,    32,    32,    32,
    79,    80,     1,    32,     1,     1,    83,     1,    87,    93,
     1,   nil,     1,   nil,     1,     0,     0,   nil,     0,   nil,
     1,     0,    45,     0,   nil,     0,   nil,   nil,    45,    45,
    45,     0,    51,   nil,    45,   nil,   nil,   nil,    51,    51,
    51,    58,   nil,   nil,    51,   nil,    58,    58,    58,    58,
    78,    58,   nil,    58,   nil,   nil,    78,    78,    78,    84,
   nil,   nil,    78,   nil,   nil,    84,    84,    84,   104,   nil,
   nil,    84,   nil,   104,   104,   104,   104,   nil,   104,   nil,
   104 ]

racc_action_pointer = [
    73,    62,   -18,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    -4,   -16,   -13,   -10,   -10,     7,    -1,     8,
   nil,    37,    17,   nil,    17,   nil,    26,   nil,    17,   nil,
   nil,   nil,    38,   nil,    40,     4,   nil,   nil,   nil,   nil,
   nil,   nil,    20,   nil,   nil,    69,   nil,   nil,   nil,   nil,
   nil,    79,   nil,   nil,   nil,   nil,   nil,   nil,    88,   nil,
   nil,   nil,   nil,   nil,    43,   nil,   nil,    -3,   nil,   nil,
    20,   nil,   nil,   nil,   nil,   nil,     9,     0,    97,    34,
    33,   nil,   nil,    53,   106,   nil,   nil,    42,   nil,   nil,
   nil,   nil,   nil,    41,     7,    -2,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    25,   115,   nil,   nil,   -17,   nil ]

racc_action_default = [
   -65,   -65,   -58,   -58,    -4,    -5,    -7,    -8,    -9,   -10,
   -11,   -12,   -49,   -65,   -65,   -65,   -65,   -65,   -65,   -65,
   -50,   -65,   -58,    -1,   -55,   -56,   -65,   -58,   -65,   -43,
   -44,   -64,   -65,   -59,   -65,   -65,   -58,   -58,   -60,   -27,
   -28,   -29,   -30,   -32,   -45,   -65,   -49,   -51,   -52,   -53,
   -54,   -65,   -62,   109,    -2,   -57,    -3,    -6,   -65,   -42,
   -14,   -17,   -18,   -19,   -65,   -34,   -35,   -36,   -38,   -39,
   -65,   -41,   -15,   -16,   -47,   -48,   -65,   -65,   -65,   -65,
   -65,   -13,   -20,   -65,   -65,   -58,   -58,   -65,   -46,   -61,
   -33,   -63,   -37,   -65,   -23,   -65,   -31,   -40,   -21,   -58,
   -58,   -25,   -26,   -65,   -65,   -22,   -58,   -65,   -24 ]

racc_goto_table = [
    26,    61,    65,    43,    28,    75,    41,    51,    85,    88,
     1,    23,    37,    90,    32,    34,    35,    96,     2,    22,
    56,    57,    72,    74,    58,    27,    97,    81,    65,    59,
    79,    54,    60,    76,    77,   105,    80,   108,    78,    63,
    73,    62,    36,    98,   100,   102,    40,    67,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    84,    83,
   nil,   nil,   nil,    87,   nil,    86,   nil,   nil,   nil,    93,
   nil,   nil,   nil,   106,    65,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    94,    95,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   103,   104,   nil,   nil,
   nil,   nil,   nil,   107 ]

racc_goto_check = [
     5,    14,    18,    29,    33,    18,    15,    30,    11,    26,
     1,     3,    24,    31,    16,    16,    16,    26,     2,     2,
     6,     7,    15,    15,     5,    13,    31,    14,    18,    16,
    29,     3,    17,     5,     5,    11,    29,    26,    24,    19,
    20,    21,    22,    23,    25,    27,    28,    32,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    30,    33,
   nil,   nil,   nil,    29,   nil,    15,   nil,   nil,   nil,    29,
   nil,   nil,   nil,    14,    18,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,     5,     5,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,     5,     5,   nil,   nil,
   nil,   nil,   nil,     5 ]

racc_goto_pointer = [
   nil,    10,    18,     9,   nil,    -3,    -6,    -5,   nil,   nil,
   nil,   -68,   nil,    13,   -31,   -12,     1,     0,   -30,     7,
     5,     9,    26,   -51,    -4,   -51,   -70,   -50,    28,   -15,
   -12,   -67,    15,    -8,   nil ]

racc_goto_default = [
   nil,   nil,   nil,   nil,     3,    24,     4,     5,     7,     8,
     9,    10,    11,   nil,   nil,    13,   nil,   nil,    14,    15,
   nil,   nil,   nil,   nil,    45,   nil,   nil,    30,   nil,    66,
   nil,   nil,   nil,   nil,    44 ]

racc_reduce_table = [
  0, 0, :racc_error,
  2, 31, :_reduce_1,
  3, 31, :_reduce_2,
  3, 32, :_reduce_3,
  1, 32, :_reduce_4,
  1, 34, :_reduce_5,
  3, 34, :_reduce_6,
  1, 37, :_reduce_7,
  1, 36, :_reduce_8,
  1, 36, :_reduce_9,
  1, 36, :_reduce_10,
  1, 36, :_reduce_11,
  1, 36, :_reduce_12,
  4, 38, :_reduce_13,
  3, 39, :_reduce_14,
  3, 39, :_reduce_15,
  3, 39, :_reduce_16,
  1, 47, :_reduce_none,
  1, 47, :_reduce_18,
  1, 47, :_reduce_none,
  2, 47, :_reduce_20,
  6, 40, :_reduce_21,
  3, 53, :_reduce_22,
  0, 53, :_reduce_23,
  9, 52, :_reduce_24,
  1, 55, :_reduce_none,
  1, 55, :_reduce_none,
  2, 41, :_reduce_27,
  2, 42, :_reduce_28,
  1, 58, :_reduce_none,
  1, 58, :_reduce_30,
  4, 58, :_reduce_31,
  1, 58, :_reduce_none,
  4, 49, :_reduce_33,
  1, 44, :_reduce_none,
  1, 44, :_reduce_35,
  1, 51, :_reduce_none,
  3, 51, :_reduce_37,
  1, 51, :_reduce_38,
  1, 51, :_reduce_39,
  4, 62, :_reduce_40,
  1, 62, :_reduce_41,
  2, 43, :_reduce_42,
  1, 63, :_reduce_none,
  1, 63, :_reduce_none,
  1, 59, :_reduce_45,
  3, 59, :_reduce_46,
  1, 50, :_reduce_none,
  1, 50, :_reduce_none,
  1, 45, :_reduce_49,
  1, 48, :_reduce_50,
  1, 64, :_reduce_51,
  1, 64, :_reduce_52,
  1, 64, :_reduce_53,
  1, 64, :_reduce_54,
  1, 33, :_reduce_none,
  1, 33, :_reduce_none,
  2, 35, :_reduce_none,
  0, 35, :_reduce_none,
  1, 46, :_reduce_none,
  1, 54, :_reduce_none,
  1, 56, :_reduce_none,
  1, 60, :_reduce_none,
  1, 61, :_reduce_none,
  1, 57, :_reduce_none ]

racc_reduce_n = 65

racc_shift_n = 109

racc_token_table = {
  false => 0,
  :error => 1,
  :SYMBOL => 2,
  :A => 3,
  :ALU_OP => 4,
  :IF => 5,
  :ELSE => 6,
  :COMPARE => 7,
  :GOTO => 8,
  :GOTO_SYMBOL => 9,
  :RETURN => 10,
  :ACTION => 11,
  :MEM => 12,
  :INT => 13,
  :SYS_NUMBER => 14,
  :ARCH => 15,
  :ARGS => 16,
  :INSTRUCTION_POINTER => 17,
  :X => 18,
  :HEX_INT => 19,
  :ARCH_VAL => 20,
  :SYSCALL => 21,
  :false => 22,
  :NEWLINE => 23,
  "=" => 24,
  "(" => 25,
  ")" => 26,
  "[" => 27,
  "]" => 28,
  "&" => 29 }

racc_nt_base = 30

racc_use_result_var = false

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "SYMBOL",
  "A",
  "ALU_OP",
  "IF",
  "ELSE",
  "COMPARE",
  "GOTO",
  "GOTO_SYMBOL",
  "RETURN",
  "ACTION",
  "MEM",
  "INT",
  "SYS_NUMBER",
  "ARCH",
  "ARGS",
  "INSTRUCTION_POINTER",
  "X",
  "HEX_INT",
  "ARCH_VAL",
  "SYSCALL",
  "false",
  "NEWLINE",
  "\"=\"",
  "\"(\"",
  "\")\"",
  "\"[\"",
  "\"]\"",
  "\"&\"",
  "$start",
  "prog",
  "normalized_statement",
  "terminator",
  "symbols",
  "newlines",
  "statement",
  "symbol",
  "arithmetic",
  "assignment",
  "conditional",
  "goto_expr",
  "return_stat",
  "alu_op_eq",
  "x_constexpr",
  "a",
  "ASSIGN",
  "rval",
  "x",
  "memory",
  "ax",
  "argument",
  "comparison",
  "else_block",
  "LPAREN",
  "compare",
  "RPAREN",
  "AND",
  "ret_val",
  "constexpr",
  "LBRACK",
  "RBRACK",
  "argument_long",
  "alu_op",
  "number" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'sasm.y', 3)
  def _reduce_1(val, _values)
     [val[0]]
  end
.,.,

module_eval(<<'.,.,', 'sasm.y', 4)
  def _reduce_2(val, _values)
     val[0] << val[1]
  end
.,.,

module_eval(<<'.,.,', 'sasm.y', 5)
  def _reduce_3(val, _values)
     Statement.new(*val[2], val[0])
  end
.,.,

module_eval(<<'.,.,', 'sasm.y', 6)
  def _reduce_4(val, _values)
     Statement.new(*val[0], [])
  end
.,.,

module_eval(<<'.,.,', 'sasm.y', 7)
  def _reduce_5(val, _values)
     val
  end
.,.,

module_eval(<<'.,.,', 'sasm.y', 8)
  def _reduce_6(val, _values)
     val[0] << val[2]
  end
.,.,

module_eval(<<'.,.,', 'sasm.y', 10)
  def _reduce_7(val, _values)
                t = val[0]
            raise_error("'next' is a reserved label") if t == 'next'
            t

  end
.,.,

module_eval(<<'.,.,', 'sasm.y', 14)
  def _reduce_8(val, _values)
     [:alu, val[0]]
  end
.,.,

module_eval(<<'.,.,', 'sasm.y', 15)
  def _reduce_9(val, _values)
     [:assign, val[0]]
  end
.,.,

module_eval(<<'.,.,', 'sasm.y', 16)
  def _reduce_10(val, _values)
     [:if, val[0]]
  end
.,.,

module_eval(<<'.,.,', 'sasm.y', 17)
  def _reduce_11(val, _values)
     [:if, [nil, val[0], val[0]]]
  end
.,.,

module_eval(<<'.,.,', 'sasm.y', 18)
  def _reduce_12(val, _values)
     [:ret, val[0]]
  end
.,.,

module_eval(<<'.,.,', 'sasm.y', 19)
  def _reduce_13(val, _values)
     [val[1], val[3]]
  end
.,.,

module_eval(<<'.,.,', 'sasm.y', 20)
  def _reduce_14(val, _values)
     [val[0], val[2]]
  end
.,.,

module_eval(<<'.,.,', 'sasm.y', 21)
  def _reduce_15(val, _values)
     [val[0], val[2]]
  end
.,.,

module_eval(<<'.,.,', 'sasm.y', 22)
  def _reduce_16(val, _values)
     [val[0], val[2]]
  end
.,.,

# reduce 17 omitted

module_eval(<<'.,.,', 'sasm.y', 24)
  def _reduce_18(val, _values)
     Scalar::Data.new(val[0])
  end
.,.,

# reduce 19 omitted

module_eval(<<'.,.,', 'sasm.y', 28)
  def _reduce_20(val, _values)
            raise_error('do you mean A = -A?', -1) if val[0] != '-'
        :neg

  end
.,.,

module_eval(<<'.,.,', 'sasm.y', 31)
  def _reduce_21(val, _values)
     [val[1], val[3], val[5]]
  end
.,.,

module_eval(<<'.,.,', 'sasm.y', 32)
  def _reduce_22(val, _values)
     val[2]
  end
.,.,

module_eval(<<'.,.,', 'sasm.y', 33)
  def _reduce_23(val, _values)
     'next'
  end
.,.,

module_eval(<<'.,.,', 'sasm.y', 34)
  def _reduce_24(val, _values)
     [val[4], val[6]]
  end
.,.,

# reduce 25 omitted

# reduce 26 omitted

module_eval(<<'.,.,', 'sasm.y', 37)
  def _reduce_27(val, _values)
     val[1]
  end
.,.,

module_eval(<<'.,.,', 'sasm.y', 38)
  def _reduce_28(val, _values)
     val[1]
  end
.,.,

# reduce 29 omitted

module_eval(<<'.,.,', 'sasm.y', 40)
  def _reduce_30(val, _values)
     Const::BPF::ACTION[val[0].to_sym]
  end
.,.,

module_eval(<<'.,.,', 'sasm.y', 42)
  def _reduce_31(val, _values)
                 Const::BPF::ACTION[val[0].to_sym] |
               (val[2] & Const::BPF::SECCOMP_RET_DATA)

  end
.,.,

# reduce 32 omitted

module_eval(<<'.,.,', 'sasm.y', 47)
  def _reduce_33(val, _values)
                idx = val[2]
            raise_error(format("Index of mem[] must between 0 and 15, got %d", idx), -1) unless idx.between?(0, 15)
            Scalar::Mem.new(idx)

  end
.,.,

# reduce 34 omitted

module_eval(<<'.,.,', 'sasm.y', 52)
  def _reduce_35(val, _values)
     Scalar::ConstVal.new(val[0])
  end
.,.,

# reduce 36 omitted

module_eval(<<'.,.,', 'sasm.y', 55)
  def _reduce_37(val, _values)
                  if val[1] != '>>' || val[2].to_i != 4
                off = val[1] == '>>' ? 0 : -1
                raise_error("operator after an argument can only be '>> 4'", off)
              end
              val[0] + 4

  end
.,.,

module_eval(<<'.,.,', 'sasm.y', 61)
  def _reduce_38(val, _values)
     0
  end
.,.,

module_eval(<<'.,.,', 'sasm.y', 62)
  def _reduce_39(val, _values)
     4
  end
.,.,

module_eval(<<'.,.,', 'sasm.y', 65)
  def _reduce_40(val, _values)
                       idx = val[2]
                   raise_error(format('Index of args[] must between 0 and 5, got %d', idx), -1) unless idx.between?(0, 5)
                   16 + idx * 8

  end
.,.,

module_eval(<<'.,.,', 'sasm.y', 69)
  def _reduce_41(val, _values)
     8
  end
.,.,

module_eval(<<'.,.,', 'sasm.y', 70)
  def _reduce_42(val, _values)
     val[0] + val[1]
  end
.,.,

# reduce 43 omitted

# reduce 44 omitted

module_eval(<<'.,.,', 'sasm.y', 73)
  def _reduce_45(val, _values)
     val[0] & 0xffffffff
  end
.,.,

module_eval(<<'.,.,', 'sasm.y', 74)
  def _reduce_46(val, _values)
     val[1]
  end
.,.,

# reduce 47 omitted

# reduce 48 omitted

module_eval(<<'.,.,', 'sasm.y', 77)
  def _reduce_49(val, _values)
     Scalar::A.instance
  end
.,.,

module_eval(<<'.,.,', 'sasm.y', 78)
  def _reduce_50(val, _values)
     Scalar::X.instance
  end
.,.,

module_eval(<<'.,.,', 'sasm.y', 79)
  def _reduce_51(val, _values)
     val[0].to_i
  end
.,.,

module_eval(<<'.,.,', 'sasm.y', 80)
  def _reduce_52(val, _values)
     val[0].to_i(16)
  end
.,.,

module_eval(<<'.,.,', 'sasm.y', 81)
  def _reduce_53(val, _values)
     Const::Audit::ARCH[val[0]]
  end
.,.,

module_eval(<<'.,.,', 'sasm.y', 82)
  def _reduce_54(val, _values)
     @scanner.syscalls[val[0].to_sym]
  end
.,.,

# reduce 55 omitted

# reduce 56 omitted

# reduce 57 omitted

# reduce 58 omitted

# reduce 59 omitted

# reduce 60 omitted

# reduce 61 omitted

# reduce 62 omitted

# reduce 63 omitted

# reduce 64 omitted

def _reduce_none(val, _values)
  val[0]
end

    end   # class SeccompAsmParser
  end   # module Asm
end   # module SeccompTools


